{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","currentName","props","name","prevName","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","handleClickRight","event","preventDefault","handleClickLeft","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,YAAa,IAAIC,MAFrB,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAc,IAAIC,KAExB,EAAKK,SAAS,CAAEN,gBAEhBO,QAAQC,KAAKR,EAAYS,cAAcC,OAAO,IAAK,MAClD,OAdP,gCAiBE,SAAmBC,GACjB,IAAMC,EAAcT,KAAKU,MAAMC,KACzBC,EAAWJ,EAAUG,KAEvBC,IAAaH,GAEfL,QAAQS,MAAR,uBAA8BD,EAA9B,eAA6CH,MAvBnD,kCA2BE,WACER,OAAOa,cAAcd,KAAKD,WA5B9B,oBA+BE,WACE,IAAQY,EAASX,KAAKU,MAAdC,KACAd,EAAgBG,KAAKJ,MAArBC,YAER,OACE,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGlB,EAAYS,cAAcC,OAAO,IAAK,YA5CjD,GAA2BS,aCD3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBW,GAGX,IAAMG,EAAb,4MACEzB,MAAQ,CACN0B,UAAU,EACVC,UAAW,WAHf,EAMExB,QAAU,EANZ,EAuBEyB,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKvB,SAAS,CAAEmB,UAAU,KAzB9B,EA4BEK,gBAAkB,WAChB,EAAKxB,SAAS,CAAEmB,UAAU,KA7B9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAe7B,KAAKwB,kBAE9CI,SAASC,iBAAiB,QAAS7B,KAAK2B,iBACxC3B,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEoB,UAAWN,QAC1B,QAdP,kCAiBE,WACEW,SAASE,oBAAoB,cAAe9B,KAAKwB,kBACjDI,SAASE,oBAAoB,QAAS9B,KAAK2B,iBAC3C1B,OAAOa,cAAcd,KAAKD,WApB9B,oBAgCE,WACE,MAAgCC,KAAKJ,MAA7B2B,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CACEO,GAAY,cAAC,EAAD,CAAOX,KAAMY,WAtCnC,GAAyBP,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.d6b987b7.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string\n};\n\ntype State = {\n  currentTime: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    currentTime: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const currentTime = new Date();\n\n      this.setState({ currentTime });\n      // eslint-disable-next-line no-console\n      console.info(currentTime.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const currentName = this.props.name;\n    const prevName = prevProps.name;\n\n    if (prevName !== currentName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleClickRight);\n\n    document.addEventListener('click', this.handleClickLeft);\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleClickRight);\n    document.removeEventListener('click', this.handleClickLeft);\n    window.clearInterval(this.timerId);\n  }\n\n  handleClickRight = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClickLeft = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        { hasClock && <Clock name={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}